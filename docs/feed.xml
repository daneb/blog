<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://www.danebalia.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.danebalia.com/" rel="alternate" type="text/html" /><updated>2022-05-08T00:10:34+02:00</updated><id>https://www.danebalia.com/feed.xml</id><title type="html">Dane Balia</title><subtitle>This is my personal site, an expression of my learning, wisdom gained, experience and opinion.</subtitle><entry><title type="html">Team Leads Manual</title><link href="https://www.danebalia.com/jekyll/leadership/2022/05/07/team-leads-manual.html" rel="alternate" type="text/html" title="Team Leads Manual" /><published>2022-05-07T23:54:43+02:00</published><updated>2022-05-07T23:54:43+02:00</updated><id>https://www.danebalia.com/jekyll/leadership/2022/05/07/team-leads-manual</id><content type="html" xml:base="https://www.danebalia.com/jekyll/leadership/2022/05/07/team-leads-manual.html">&lt;p&gt;&lt;img src=&quot;/images/serve.jpg&quot; alt=&quot;Leadership&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;team-leads-user-manual&quot;&gt;Team Lead’s User Manual&lt;/h1&gt;

&lt;h2 id=&quot;what-is-this&quot;&gt;What is this&lt;/h2&gt;
&lt;p&gt;It’s the &lt;em&gt;essence&lt;/em&gt; of how I operate as a TL.&lt;br /&gt;
This is not a list of rules of how I operate, but the under-current of values and thinking that guides those operations.&lt;/p&gt;

&lt;h2 id=&quot;i-am-human&quot;&gt;I am human&lt;/h2&gt;
&lt;p&gt;I am a passionate husband and father. My family is a strong focus and my inspiration.
I am an introvert, a creative, a change agent, potential seeker and a servant-leader.
An avid reader and struggling gamer, yeah 3 kids ;)
Truly enjoy &lt;a href=&quot;https://www.youtube.com/user/yogawithadriene&quot;&gt;yoga!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My approach to life is guided by 5 principals (5 BE’s):&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Be Simple - Large doors swing on small hinges (problems)&lt;/li&gt;
  &lt;li&gt;Be Confident - Know you can. Trust you can. Practice so you can (attitude)&lt;/li&gt;
  &lt;li&gt;Be Focused - Limit the scope to whats manageable and what produces the most immediate feedback (productivity)&lt;/li&gt;
  &lt;li&gt;Be True - True To Self. True To Others. Seek truth in every situation as it’s the only effective way to diagnose reality (character)&lt;/li&gt;
  &lt;li&gt;Be Consistent - Habits done consistently produce effectivity (actions)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;three-core-values&quot;&gt;Three core values&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.radicalcandor.com/&quot;&gt;Radical Candour&lt;/a&gt; - caring for others requires candid communication.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822&quot;&gt;Mutual Purpose&lt;/a&gt; - manage the stories we tell ourselves about others. In conflict seek to understand your purpose and that of the other person.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.timetothink.com/book/time-to-think/&quot;&gt;Psychological Safety&lt;/a&gt; - the effectiveness of our thinking relates to how we treat one another&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;how-i-manage&quot;&gt;How I manage&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;I aim to set clear expectations and be direct about it’s accountability. When I fail to do so adequately, please feedback.&lt;/li&gt;
  &lt;li&gt;I have a natural and genuine care for those who I am responsible for.&lt;/li&gt;
  &lt;li&gt;I eagerly welcome feedback with facts, examples and/or specifics. Vice versa.&lt;/li&gt;
  &lt;li&gt;If it doesn’t work, lets build a plan, or just get rid of it.&lt;/li&gt;
  &lt;li&gt;I aim to do whats right. But sometimes right is not effective. If not harmful, do whats effective.&lt;/li&gt;
  &lt;li&gt;Everyone desires to give their best and is sincere in what they are trying to communicate.&lt;/li&gt;
  &lt;li&gt;“We don’t click” can be an emotion based on the spiralling stories we have told ourselves. Seperate the facts from the stories.&lt;/li&gt;
  &lt;li&gt;I enjoy collaboration particularly with the multiplicity and diversity of minds.&lt;/li&gt;
  &lt;li&gt;If you not getting to deep work, reach out, I will do my utmost to figure out how to unblock you.&lt;/li&gt;
  &lt;li&gt;I am work in progress.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;areas-im-working-to-improve&quot;&gt;Areas I’m working to improve…&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Switching too quickly from problem definition to problem resolution.&lt;/li&gt;
  &lt;li&gt;Effecting change at a less rapid rate (at times).&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;lessons-learned&quot;&gt;Lessons Learned&lt;/h2&gt;

&lt;h3 id=&quot;people&quot;&gt;People&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Trying to fit in results in insecurity&lt;/li&gt;
  &lt;li&gt;Your relationship you have with your team mates should be without condition.&lt;/li&gt;
  &lt;li&gt;The opposite of collaboration is COMPETITION.&lt;/li&gt;
  &lt;li&gt;Rather be HARD with people than SOFT. Hard mistakes like being UNFAIR leaves responsibility with the individual to change or innovate. SOFT mistakes are unknown and thus responsibility or ownership has not been passed.&lt;/li&gt;
  &lt;li&gt;Trust is when a team member does what the standard’s define.&lt;/li&gt;
  &lt;li&gt;REAL Trust happens when a team member does what the standard’s define and comes alongside others to aid and enable (a socceer team)&lt;/li&gt;
  &lt;li&gt;You can’t train will&lt;/li&gt;
  &lt;li&gt;Don’t create a dependance on yourself to get things DONE. Hold people accountable. Treat them like adults.&lt;/li&gt;
  &lt;li&gt;Easy to care about top performers and give them special preferance. But that sets a president.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;person&quot;&gt;Person&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;For people to be willing - you have to GIVE. Don’t be a TAKER.&lt;/li&gt;
  &lt;li&gt;Surplus in an organization results from having more GIVE than TAKE.&lt;/li&gt;
  &lt;li&gt;If you desire to be liked (reputation and status), the POWER dynamic of the relationship then becomes that you hand over power to the person and then allow yourself to be manipulated.&lt;/li&gt;
  &lt;li&gt;Be you, don’t try to fit in. If you fit in you will never attain that expectation. Just be YOU.&lt;/li&gt;
  &lt;li&gt;VALUES are a set of things that are abtractions above one’s own self-interest&lt;/li&gt;
  &lt;li&gt;A LEADER is a higher level of thought-through maturity and action&lt;/li&gt;
  &lt;li&gt;As a leader you must always WTG (watch the game)&lt;/li&gt;
  &lt;li&gt;CARE = TIME + ATTENTION&lt;/li&gt;
  &lt;li&gt;CARE = unconditional&lt;/li&gt;
  &lt;li&gt;CARE  cannot exist without accountability&lt;/li&gt;
  &lt;li&gt;HOLY THREE (twine): Accountability &amp;amp; Trust &amp;amp; Courage&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;process&quot;&gt;Process&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Don’t use PIP to get rid of employee’s. They are there to empower people.&lt;/li&gt;
  &lt;li&gt;PIP’s need better marketing - they are a way to improve individuals, the relationship with their lead&lt;/li&gt;
  &lt;li&gt;To empower a team, you define STANDARDS and not BHAG (big audacious hairy goals). Goals can diminish and build a pattern of non-delivery. Failure becomes a HABIT. STANDARDS are the operating procedures, best practices etc.&lt;/li&gt;
  &lt;li&gt;STANDARDS are the bare minimum&lt;/li&gt;
  &lt;li&gt;DON’T PROMOTE. Only offer promotions.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="jekyll" /><category term="leadership" /><summary type="html"></summary></entry><entry><title type="html">Emacs For The Win</title><link href="https://www.danebalia.com/jekyll/hobbies/2022/04/18/emacs-for-the-win.html" rel="alternate" type="text/html" title="Emacs For The Win" /><published>2022-04-18T19:28:43+02:00</published><updated>2022-04-18T19:28:43+02:00</updated><id>https://www.danebalia.com/jekyll/hobbies/2022/04/18/emacs-for-the-win</id><content type="html" xml:base="https://www.danebalia.com/jekyll/hobbies/2022/04/18/emacs-for-the-win.html">&lt;p&gt;&lt;img src=&quot;/images/doom.png&quot; alt=&quot;Emacs&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;wsl2-woes&quot;&gt;WSL2 woes&lt;/h3&gt;

&lt;p&gt;My IDE of choice for the past year has been Emacs, more specfically &lt;a href=&quot;https://github.com/hlissner/doom-emacs&quot;&gt;Doom Emacs&lt;/a&gt;. However in changing jobs I’ve found myself cornered on a Windows desktop. This has posed some challenges, specifically around having a fast and smooth development experience using Emacs. My get up and running approach was to install Emacs vanilla with a pre-built &lt;a href=&quot;http://ftp.wayne.edu/gnu/emacs/windows/emacs-28/&quot;&gt;binary&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But alas, this resulted in a 20+ second load time. So I chose the next best thing, WSL2. WSL2 on Windows 11 is an amazing option given that you can now leverage GTK. For instructions on doing this look no further then &lt;a href=&quot;https://emacsredux.com/blog/2021/12/19/using-emacs-on-windows-11-with-wsl2/&quot;&gt;Bozhidar Batsov&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I followed this process, compiled Emacs 29 with PGTK and even added the hack for copying from Windows to Emacs. But I was disappointed with an experience of instability, where Emacs would occassionally crash (without warning) and at times copying being sporadic or not working in certain screens. But the real killer was the networking from WSL2 to my Windows Host.&lt;/p&gt;

&lt;p&gt;While everything worked largely, I run a VPN for work purposes. I solved that largely using &lt;a href=&quot;https://github.com/sakai135/wsl-vpnkit&quot;&gt;WSL VpnKit&lt;/a&gt;. This however broke at times. Thereafter further complications resulted from requiring OpenSSL certificates found in Windows that were not in WSL2. So between random crashes, sporadic network failures and configuration pains was a huge loss of time. And for that I ditched Emacs, and moved to VSCode.&lt;/p&gt;

&lt;h3 id=&quot;emacs-joy&quot;&gt;Emacs joy&lt;/h3&gt;

&lt;p&gt;But despite the smooth experience and easy configuration of VsCode, I just couldn’t push past the missing workflow, the keyboard shortcuts and the design. I will take my hat of to the amazing VsCode community, they have even taken some of the best things about Emacs and incorporated it, like &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=kahole.magit&quot;&gt;Magit&lt;/a&gt; and an almost &lt;a href=&quot;https://vscode-org-mode.github.io/vscode-org-mode/&quot;&gt;Org Roam&lt;/a&gt; or &lt;a href=&quot;https://hodgkins.io/vscode-second-brain&quot;&gt;Custom second brain&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So I scratched the itch and found that I could significantly improve performance using &lt;a href=&quot;https://www.msys2.org/&quot;&gt;MSYS2&lt;/a&gt;. While this is based of Cygwin, it first natively compiles and leverages off Cygwin secondarily.&lt;/p&gt;

&lt;h3 id=&quot;steps&quot;&gt;Steps&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Install &lt;a href=&quot;https://www.msys2.org/&quot;&gt;MSYS2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Run “MSYS2 Msys”, and install some key compilation requirements:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pacman -Sy --needed filesystem msys2-runtime bash libreadline libiconv libarchive libgpgme libcurl pacman ncurses libintl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Run the following, and then close and re-open.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pacman -Su
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Install the Emacs dependencies
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pacman -Su autoconf autogen automake automake-wrapper diffutils git guile libgc libguile libltdl libunistring  make mingw-w64-x86_64-binutils mingw-w64-x86_64-bzip2 mingw-w64-x86_64-cairo mingw-w64-x86_64-cloog mingw-w64-x86_64-crt-git mingw-w64-x86_64-dbus mingw-w64-x86_64-expat mingw-w64-x86_64-fontconfig mingw-w64-x86_64-freetype mingw-w64-x86_64-gcc mingw-w64-x86_64-gcc-libs mingw-w64-x86_64-gdk-pixbuf2 mingw-w64-x86_64-gettext mingw-w64-x86_64-giflib mingw-w64-x86_64-glib2 mingw-w64-x86_64-gmp mingw-w64-x86_64-gnutls mingw-w64-x86_64-harfbuzz mingw-w64-x86_64-headers-git mingw-w64-x86_64-imagemagick mingw-w64-x86_64-isl mingw-w64-x86_64-libcroco mingw-w64-x86_64-libffi mingw-w64-x86_64-libgccjit mingw-w64-x86_64-libiconv  mingw-w64-x86_64-libjpeg-turbo mingw-w64-x86_64-libpng mingw-w64-x86_64-librsvg mingw-w64-x86_64-libtiff mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-libxml2 mingw-w64-x86_64-mpc mingw-w64-x86_64-mpfr mingw-w64-x86_64-pango mingw-w64-x86_64-pixman mingw-w64-x86_64-winpthreads mingw-w64-x86_64-xpm-nox mingw-w64-x86_64-lcms2 mingw-w64-x86_64-xz mingw-w64-x86_64-zlib tar wget
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Clone Emacs
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone http://git.savannah.gnu.org/r/emacs.git emacs-29
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Git Config requirement
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config core.autocrlf false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Setup
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  cd emacs-29
  ./autogen.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Configure
Configure the features and functionality you may require. With the last argument ‘prefix’, you can define the location for your installation.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ./configure     --host=x86_64-w64-mingw32     --target=x86_64-w64-mingw32     --build=x86_64-w64-mingw32     --with-native-compilation     --with-gnutls     --with-imagemagick     --with-jpeg     --with-json     --with-png     --with-rsvg     --with-tiff     --with-wide-int     --with-xft     --with-xml2     --with-xpm     'CFLAGS=-I/mingw64/include/noX'     prefix=/c/emacs/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Build and Install
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make
make install prefix=/c/emacs/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;success&quot;&gt;Success&lt;/h3&gt;
&lt;p&gt;Here on out you should have a successful build. It is from here I then install Doom Emacs. A key step I initially missed was setting an environment variable for the mingw64 libraries and binaries as a Windows environment variable.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\msys64\mingw64\bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After Doom install, I use command prompt or Powershell to start Emacs&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doom run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="jekyll" /><category term="hobbies" /><summary type="html"></summary></entry><entry><title type="html">2022 Reading List</title><link href="https://www.danebalia.com/jekyll/update/hobbies/2022/02/03/2022-reading-list.html" rel="alternate" type="text/html" title="2022 Reading List" /><published>2022-02-03T10:16:00+02:00</published><updated>2022-02-03T10:16:00+02:00</updated><id>https://www.danebalia.com/jekyll/update/hobbies/2022/02/03/2022-reading-list</id><content type="html" xml:base="https://www.danebalia.com/jekyll/update/hobbies/2022/02/03/2022-reading-list.html">&lt;p&gt;&lt;img src=&quot;/images/books.png&quot; alt=&quot;2022 Reading List&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;read&quot;&gt;Read:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.paultripp.com/redeeming-money&quot;&gt;Paul Tripp - Redeeming Money&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/162823.The_Case_Book_of_Sherlock_Holmes&quot;&gt;Arthur Conan Doyle - A Study in Scalett&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/45722123-noble-beginnings&quot;&gt;Noble Beginnings&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/18006972-quiet&quot;&gt;Quiet: Power Of Introverts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/46000520-the-thursday-murder-club&quot;&gt;The Thursday Murder Club&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/25076674-the-alchemist&quot;&gt;The Alchemist&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/20174383-billy-sunday&quot;&gt;Bill Sunday: The Man and His Message&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/194366.The_Return_of_Sherlock_Holmes&quot;&gt;The Return of Sherlock Holmes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;planned&quot;&gt;Planned:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://craftinginterpreters.com/&quot;&gt;Robert Nystrom - Crafting Intepreters&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://csharpindepth.com/&quot;&gt;John Skeet - C# in Depth &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/15842786-understanding-computation&quot;&gt;Tom Stuart - Understanding Computation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://geraldmweinberg.com/Site/QSM_vol_1.html&quot;&gt;Gerald Weinberg - Quality Software Management, Vol 1: Systems Thinking&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Thinking-Systems-Donella-H-Meadows/dp/1603580557&quot;&gt;Donella Meadows - Thinking in Systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/dp/1491983647?tag=bbookshub-20&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&quot;&gt;Brendan Burns - Designing Distributed Systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/dp/0735211299/ref=s9_acsd_ri_bw_c2_x_2_t?pf_rd_m=ATVPDKIKX0DER&amp;amp;pf_rd_s=merchandised-search-10&amp;amp;pf_rd_r=K4AABKRFED653GK6369A&amp;amp;pf_rd_t=101&amp;amp;pf_rd_p=ec1034ac-997c-47fd-8075-3a3a4b4c3aa3&amp;amp;pf_rd_i=283155&quot;&gt;James Clear - Atomic Habits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.larkinestate.com/books/dispensational-truth.html&quot;&gt;Clarence Larking - Dispensational Truth&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/11468377-thinking-fast-and-slow&quot;&gt;Daniel Kahneman - Thinking Fast and Slow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sre.google/books/&quot;&gt;Betsy Beyer - Site Reliability Engineering&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Think-Again-Power-Knowing-What/dp/1984878107&quot;&gt;Adam Grant - Think Again&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bookshop.org/books/rationality-what-it-is-why-it-seems-scarce-why-it-matters/9780525561996&quot;&gt;Steven Pinker - Rationality: What It Is, Why It Seems Scarce, Why It Matter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Connect-Building-Exceptional-Relationships-Colleagues/dp/0593237099&quot;&gt;David Bradford - Connect: Building Exceptional Relationships with Family, Friends, and Colleagues&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><category term="hobbies" /><summary type="html"></summary></entry><entry><title type="html">Discouragement</title><link href="https://www.danebalia.com/jekyll/poem/hope/discouragement/2022/01/07/discouragement.html" rel="alternate" type="text/html" title="Discouragement" /><published>2022-01-07T13:19:22+02:00</published><updated>2022-01-07T13:19:22+02:00</updated><id>https://www.danebalia.com/jekyll/poem/hope/discouragement/2022/01/07/discouragement</id><content type="html" xml:base="https://www.danebalia.com/jekyll/poem/hope/discouragement/2022/01/07/discouragement.html">&lt;p&gt;&lt;img src=&quot;/images/discouragement.jpg&quot; alt=&quot;Discouragement&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The road of life &lt;br /&gt;
ah yes the road of life&lt;/p&gt;

&lt;p&gt;At some turn along life, &lt;br /&gt;
there THEY comes with their assault of strife &lt;br /&gt;
with winds that rage and winds that blow, &lt;br /&gt;
they beat, make meat of the courageous feat. &lt;br /&gt;
To live is hard. Is it?&lt;/p&gt;

&lt;p&gt;The weapons of these diabolical demons, &lt;br /&gt;
are seldom understood or even from my hood. &lt;br /&gt;
They beckon me come and surrender the fight. &lt;br /&gt;
They beckon me come and surrender the night.&lt;/p&gt;

&lt;p&gt;What of hopes and dreams and joy and streams, &lt;br /&gt;
What of health and wealth, &lt;br /&gt;
when it’s all abated. &lt;br /&gt;
They come with his assault of strife, &lt;br /&gt;
attacking and sucking me into the darkness.&lt;/p&gt;

&lt;p&gt;I fight, I kick, I whip, I punch, &lt;br /&gt;
I raise my hand, but I get pulled in a bunch. &lt;br /&gt;
They are strong, far stronger than me, &lt;br /&gt;
They deep in my mind causing calamity. &lt;br /&gt;
Turn back turn back the light onto me, &lt;br /&gt;
Turn back turn back its uncomfortable inadequacy.&lt;/p&gt;

&lt;p&gt;FIGHT! FIGHT! I say. I say. &lt;br /&gt;
But the warmth of day is gone &lt;br /&gt;
All around me has diminished, chaos around. Chaos. &lt;br /&gt;
Hope what of it, I know it intellectually. &lt;br /&gt;
But she is hidden. Where I don’t know?&lt;/p&gt;

&lt;p&gt;How did it get all so complex. &lt;br /&gt;
How did THEY get so strong. &lt;br /&gt;
 Who are THEY and why do me wrong. &lt;br /&gt;
My legs are deep in the myrrh now, DEEP. &lt;br /&gt;
Darkness is upon me, and I can’t intellectualize myself away&lt;/p&gt;

&lt;p&gt;A crack from the heavens &lt;br /&gt;
A fizzle? a ray? a sparkle? a way. &lt;br /&gt;
Some spirit illuminates &lt;br /&gt;
“My grace is sufficient for thee: for my strength is made perfect in weakness.”
HUH.&lt;/p&gt;

&lt;p&gt;What did it mean? &lt;br /&gt;
I began to tussle with the words of the spirit, &lt;br /&gt;
I wrestle, turn, twist and contort, &lt;br /&gt;
hammering against 14 challengers a new, &lt;br /&gt;
looking for answers for this light so few.&lt;/p&gt;

&lt;p&gt;And little did I notice, &lt;br /&gt;
that as I wrestled with the 14 challengers that day, &lt;br /&gt;
my contention with THEY went away, &lt;br /&gt;
darkness still loomed in the distance, &lt;br /&gt;
but the battle was over, for now.&lt;/p&gt;

&lt;p&gt;I recited the words of the spirit, &lt;br /&gt;
and then it hit me like a ton of bricks succinctly, &lt;br /&gt;
That it was never about MY OWN *strength** to overcome &lt;br /&gt;
But I was already equipped with *grace sufficient* to step out the darkness &lt;br /&gt;
Despite my inherent weakness.&lt;/p&gt;

&lt;p&gt;They will be back soon, one day, &lt;br /&gt;
and in my weakness to these words I shall cling.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="poem" /><category term="hope" /><category term="discouragement" /><summary type="html"></summary></entry><entry><title type="html">Quick Tour Of Generics In C#</title><link href="https://www.danebalia.com/jekyll/update/programming/2021/09/21/csharp-value-and-ref.html" rel="alternate" type="text/html" title="Quick Tour Of Generics In C#" /><published>2021-09-21T10:25:22+02:00</published><updated>2021-09-21T10:25:22+02:00</updated><id>https://www.danebalia.com/jekyll/update/programming/2021/09/21/csharp-value-and-ref</id><content type="html" xml:base="https://www.danebalia.com/jekyll/update/programming/2021/09/21/csharp-value-and-ref.html">&lt;p&gt;Generics have been around since C# 2.0 and has become a tool we leverage so naturally now in C# we almost don’t even think about it. So let’s change that…&lt;/p&gt;

&lt;h3 id=&quot;definitions&quot;&gt;Definitions&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Generics introduce to the .NET Framework the concept of type parameters, which make it possible to design classes and methods that defer the specification of one or more types until the class or method is declared and instantiated by client code&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Essentially generics allow you parameterize types and methods. Just as normal methods have &lt;em&gt;parameters&lt;/em&gt; to tell them what &lt;em&gt;values&lt;/em&gt; to use, generic types and methods have &lt;em&gt;type parameters&lt;/em&gt; to tell them what &lt;em&gt;types&lt;/em&gt; to use.&lt;/p&gt;

&lt;h3 id=&quot;clarification&quot;&gt;Clarification&lt;/h3&gt;

&lt;p&gt;Type parameters are placeholders for a type.&lt;/p&gt;

&lt;p&gt;There are &lt;em&gt;constructed types&lt;/em&gt; and &lt;em&gt;generic types&lt;/em&gt;.
A constructed type is when the type arguments are specified. For example,&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Dictionary&amp;lt;int, string&amp;gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A generic type is when the type arguments are not specified. For example,&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Dictionary&amp;lt;TKey, TValue&amp;gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As per the code snippet below, writing a method to swap two &lt;em&gt;Integer&lt;/em&gt; values is pretty rudimentary. But what if later we needed to do the very same but with &lt;em&gt;Strings&lt;/em&gt;. This would result in two methods, or perhaps overloads.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/13124e5ec2369117aff8fc27a3a861e5.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Generics to the rescue. We’ve isolated the type as a form of abstraction (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;T&lt;/code&gt;) to act as a placeholder for the type we intend to use.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/9ab19f0a644a3e79525f932e4e34cd5f.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;When the method is actually called, that placeholder is replaced with the type of the values used.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/f318890ecb9849ced43bccfe86744093.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;The value of Generics here is that it grants you &lt;em&gt;productivity&lt;/em&gt; improvements, &lt;em&gt;expressiveness&lt;/em&gt; and moves some safety concerns from &lt;em&gt;execution time to compile time&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Note the two ways in which the &lt;em&gt;method&lt;/em&gt; can be called. One with the type explicit, and the other implicit through &lt;em&gt;type inference&lt;/em&gt;. The compiler is inferring the &lt;em&gt;type parameters&lt;/em&gt; based on the method arguments you pass.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;generic&lt;/em&gt; is simply a placeholder for a type.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><category term="programming" /><summary type="html">Generics have been around since C# 2.0 and has become a tool we leverage so naturally now in C# we almost don’t even think about it. So let’s change that…</summary></entry><entry><title type="html">C# Value and Reference Types</title><link href="https://www.danebalia.com/jekyll/update/programming/2021/09/21/csharp-generics-intro.html" rel="alternate" type="text/html" title="C# Value and Reference Types" /><published>2021-09-21T10:22:22+02:00</published><updated>2021-09-21T10:22:22+02:00</updated><id>https://www.danebalia.com/jekyll/update/programming/2021/09/21/csharp-generics-intro</id><content type="html" xml:base="https://www.danebalia.com/jekyll/update/programming/2021/09/21/csharp-generics-intro.html">&lt;p&gt;&lt;strong&gt;Value&lt;/strong&gt; and &lt;strong&gt;Reference&lt;/strong&gt; types are covered frequently all over the internet, in blog posts, technical articles and forums. Why? Because it’s easy to develop software for a long time without stopping to ‘smell the roses’. Or in this case, understand what they are and how they work. So here’s a note to self, or you.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A &lt;strong&gt;Value Type&lt;/strong&gt; is some object that is the information itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;A &lt;strong&gt;Reference Type&lt;/strong&gt; is the details which points to an object containing the information. The details include things like type of object etc.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;an-analogy&quot;&gt;An Analogy:&lt;/h2&gt;

&lt;p&gt;Let’s set the table with an analogy. Kim has just written a book. It’s an auto-biography. She would like to get feedback so she prints a copy at home and gives it to her husband Kanya. Later that day she stumbles onto a publicist, who is intrigued and asks to read it. She fires up her Macbook and shares the link to the original via Google Drive.&lt;/p&gt;

&lt;p&gt;As time passes the publicist feeds back and is thoroughly impressed. She has highlighted a slew of spelling mistakes and a consideration for re-writing Chapter 4. Kim goes to work immediately and in a few days is done. Updating the original and requesting that the publicist review her changes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So what’s this got to do with value and reference types?&lt;/strong&gt;
Well, when Kim made Kanya a physical copy of the original. She provided him with an independent version of the truth. In fact after all her changes during her engagement with the publicist, Kanya’s copy has now become outdated and obsolete. He had a &lt;strong&gt;value type&lt;/strong&gt;. An independent copy of the source, that was detached and indifferent to modifications of the source.&lt;/p&gt;

&lt;p&gt;The publicist on the other hand, well she had a Google Drive URL, a &lt;strong&gt;reference&lt;/strong&gt; to the original. In fact as Kim made changes the publicist could see those changes in real time. The &lt;strong&gt;reference&lt;/strong&gt; provided access to the original but was not the original.&lt;/p&gt;

&lt;h2 id=&quot;some-examples&quot;&gt;Some Examples&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Array types are reference types, even if the element type is a value type (so int[] is still a reference type, even though &lt;strong&gt;int&lt;/strong&gt; is a value type)&lt;/li&gt;
  &lt;li&gt;Enumerations are value types.&lt;/li&gt;
  &lt;li&gt;Delegates are reference types.&lt;/li&gt;
  &lt;li&gt;Interfaces are reference types, but they can be implemented as values.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;stack-vs-heap&quot;&gt;Stack vs Heap&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;References types live on the Heap.
Value types lives where their declared.
Local variables and method parameters live on the Stack.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A &lt;strong&gt;Stack&lt;/strong&gt; is a simple FIFO memory structure. When a method is invoked, the CLR bookmarks the top of the stack. The method then pushes data onto the stack as it executes. When the method completes the CLR just resets the stack to it’s previous bookmark.&lt;/p&gt;

&lt;h3 id=&quot;stack-offers&quot;&gt;Stack offers:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;very fast access&lt;/li&gt;
  &lt;li&gt;space is managed efficiently by CPU, memory will not be fragmented&lt;/li&gt;
  &lt;li&gt;local variables only&lt;/li&gt;
  &lt;li&gt;limit on memory size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A &lt;strong&gt;Heap&lt;/strong&gt; is a random jumble of objects not managed by automatically for you. It is a free-floating region of memory (and is larger). In multi-threaded applications each thread will have its own stack. But all the different threads will share the heap.&lt;/p&gt;

&lt;h3 id=&quot;heap-offers&quot;&gt;Heap Offers:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;variables can be accessed globally&lt;/li&gt;
  &lt;li&gt;no limit on memory size&lt;/li&gt;
  &lt;li&gt;(relatively) slower access&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s critical to note, that a value type lives where it’s declared, so if you have a class with an instance variable of float, a value type. It will live wherever the rest of the object is found and that is on the heap.&lt;/p&gt;

&lt;p&gt;A last point, is that a string in C# is a reference type. Why? Because strings can be grow quite large in size and thus have to stored on the heap.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://vegibit.com/reference-types-and-value-types-in-c/&quot;&gt;Reference Types and Value Types in C - Vegitbit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://csharpindepth.com/&quot;&gt;C# In Depth - Jon Skeet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.albahari.com/valuevsreftypes.aspx&quot;&gt;Values vs Reference Types - Joseph Albahari&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.programmerinterview.com/data-structures/difference-between-stack-and-heap/&quot;&gt;Difference between Stack and Heap&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><category term="programming" /><summary type="html">Value and Reference types are covered frequently all over the internet, in blog posts, technical articles and forums. Why? Because it’s easy to develop software for a long time without stopping to ‘smell the roses’. Or in this case, understand what they are and how they work. So here’s a note to self, or you.</summary></entry><entry><title type="html">C# Type System</title><link href="https://www.danebalia.com/jekyll/update/programming/2021/09/21/csharp-type-system.html" rel="alternate" type="text/html" title="C# Type System" /><published>2021-09-21T10:01:22+02:00</published><updated>2021-09-21T10:01:22+02:00</updated><id>https://www.danebalia.com/jekyll/update/programming/2021/09/21/csharp-type-system</id><content type="html" xml:base="https://www.danebalia.com/jekyll/update/programming/2021/09/21/csharp-type-system.html">&lt;p&gt;&lt;img src=&quot;/images/csharp_type_system.png&quot; alt=&quot;TypeSystem&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Exploring the Terminology:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;C# 1’s type system is static, explicit, and safe.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Statically&lt;/strong&gt; typed is where each variable is of a particular type, and that type is known at compile time. In other words, the compiler does type checking at compilation time.&lt;/p&gt;

&lt;p&gt;In the test method &lt;em&gt;StaticTypeWontCompile()&lt;/em&gt; you can see the string “Hello”. But because we gave it the type Object, the compiler sees its type as Object and not String. Hence the &lt;em&gt;.Length&lt;/em&gt; method being unavailable. This test won’t run because the compiler will state &lt;strong&gt;object does not contain a definition for ‘Length’&lt;/strong&gt;.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/e0ed55842fdaa89527ace839d2abfe34.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Explicitly Typed&lt;/strong&gt; is where the type of every variables must be explicitly stated. Of course, explicit vs implicit types is only relevant in statically typed languages.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/85bd70dc0111f3663038e7e72eebe79b.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Safe Type System&lt;/strong&gt; is the characteristic of code that allows the developer to be certain that a value or object will exhibit certain properties so that he/she can use it in a specific way without fear of unexpected or undefined behavior.&lt;/p&gt;

&lt;p&gt;In the method &lt;em&gt;ThisIsSafe()&lt;/em&gt; the compiler will clearly state that an &lt;em&gt;Operator ‘+’ cannot be applied to operands of type ‘int’ and ‘bool’&lt;/em&gt;. This safety applies for the majority of C# up until we get to Collections, Inheritance, Overriding and Interfaces as witnessed in method &lt;em&gt;ThisIsUnsafe&lt;/em&gt; which compiles perfectly.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/c30ff2e9ad9c122ea12af3ba3532b159.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://csharpindepth.com/&quot;&gt;C# In Depth - Jon Skeet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/859186/why-is-c-sharp-statically-typed&quot;&gt;StackOverflow Why Is CSharp Statically Typed&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2437469/what-is-type-safe-in-net&quot;&gt;StackOverflow What is Type Safey in .NET&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/&quot;&gt;C#s Type System - Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><category term="programming" /><summary type="html"></summary></entry><entry><title type="html">A Poem: Our adventure continues..</title><link href="https://www.danebalia.com/jekyll/family/poetry/2021/09/06/11th-anniversary.html" rel="alternate" type="text/html" title="A Poem: Our adventure continues.." /><published>2021-09-06T10:16:00+02:00</published><updated>2021-09-06T10:16:00+02:00</updated><id>https://www.danebalia.com/jekyll/family/poetry/2021/09/06/11th-anniversary</id><content type="html" xml:base="https://www.danebalia.com/jekyll/family/poetry/2021/09/06/11th-anniversary.html">&lt;p&gt;&lt;strong&gt;To my darling wife…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Raging waters raging tide,&lt;br /&gt;
Magic wonder water ride.&lt;br /&gt;
Up and down the wild rapids flow,&lt;br /&gt;
Never held back by the perennial snow.&lt;/p&gt;

&lt;p&gt;Rising up, rising high,&lt;br /&gt;
Five Adventurers sailing nigh,&lt;br /&gt;
Challenged by the waves of time,&lt;br /&gt;
Never short of corny rhyme.&lt;/p&gt;

&lt;p&gt;Of the Adventurers to sail the day,&lt;br /&gt;
never hindered come what may,&lt;br /&gt;
Quick at hand, the eldest child,&lt;br /&gt;
engineering master, soft and mild.&lt;/p&gt;

&lt;p&gt;Zip, zany and bubbly bee,&lt;br /&gt;
baking, straining and fruitfully retaining.&lt;br /&gt;
Happy, pee-pee pelican,&lt;br /&gt;
tackles the shores with his magical red wheels of tin.&lt;/p&gt;

&lt;p&gt;Of we go the crazy bunch,&lt;br /&gt;
11 years of chocolate munch.&lt;br /&gt;
Hand in hand, off they sail,&lt;br /&gt;
The head a genius handsome male.&lt;/p&gt;

&lt;p&gt;By his side, a dashing dame,&lt;br /&gt;
Whose bum curves the wild winds tame,&lt;br /&gt;
Ever moulding, ever bold,&lt;br /&gt;
Always together with the tightest hold.&lt;/p&gt;

&lt;p&gt;Friends forever the heads they are,&lt;br /&gt;
Adventurers greatest we are by far.&lt;br /&gt;
Thankful to the Lord each day,&lt;br /&gt;
That Five Adventurers in beauty array.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="family" /><category term="poetry" /><summary type="html">To my darling wife…</summary></entry><entry><title type="html">2021 Reading List</title><link href="https://www.danebalia.com/jekyll/update/hobbies/2021/08/03/2021-reading-list.html" rel="alternate" type="text/html" title="2021 Reading List" /><published>2021-08-03T10:16:00+02:00</published><updated>2021-08-03T10:16:00+02:00</updated><id>https://www.danebalia.com/jekyll/update/hobbies/2021/08/03/2021-reading-list</id><content type="html" xml:base="https://www.danebalia.com/jekyll/update/hobbies/2021/08/03/2021-reading-list.html">&lt;p&gt;&lt;img src=&quot;/images/books.png&quot; alt=&quot;2021 Reading List&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Herewith a list of books that I have read so far in 2021. I am currently taking the Good Reads challenge.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Beyond-Order-More-Rules-Life/dp/0593084640/ref=sr_1_1?dchild=1&amp;amp;keywords=beyond+order&amp;amp;qid=1627978645&amp;amp;sr=8-1&quot;&gt;Jordan Peterson - Beyond Order&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Study-Scarlet-Dover-Thrift-Editions/dp/0486431665/ref=sr_1_7?crid=TU47GTLS3O7W&amp;amp;dchild=1&amp;amp;keywords=a+study+in+scarlet&amp;amp;qid=1627979458&amp;amp;sprefix=a+study+in+scar%2Caps%2C410&amp;amp;sr=8-7&quot;&gt;Arthur Conan Doyle - A Study in Scarlett&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Study-Scarlet-Dover-Thrift-Editions/dp/0486431665/ref=sr_1_7?crid=TU47GTLS3O7W&amp;amp;dchild=1&amp;amp;keywords=a+study+in+scarlet&amp;amp;qid=1627979458&amp;amp;sprefix=a+study+in+scar%2Caps%2C410&amp;amp;sr=8-7&quot;&gt;Arthur Conan Doyle - The Sign of Four&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;Ravi Zacharias - The Logic of God&lt;/a&gt; ~ of course before all the news hit 🤮&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Leaders-Eat-Last-Together-Others/dp/1591848016/ref=sr_1_1?dchild=1&amp;amp;keywords=leaders+eat+last&amp;amp;qid=1627979588&amp;amp;sr=8-1&quot;&gt;Simon Sinek - Leaders Eat Last&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Tactics-10th-Anniversary-Discussing-Convictions/dp/0310101468/ref=sr_1_1?dchild=1&amp;amp;keywords=tactics&amp;amp;qid=1627979602&amp;amp;sr=8-1&quot;&gt;Tactics - Gregory Koukl&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Debugging-Indispensable-Software-Hardware-Problems/dp/0814474578/ref=sr_1_1?dchild=1&amp;amp;keywords=debugging&amp;amp;qid=1627979617&amp;amp;sr=8-1&quot;&gt;Debugging - David Agans&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Joshua-Commentary-Bible-Believers-ebook/dp/B00L2O0W74/ref=sr_1_3?dchild=1&amp;amp;keywords=the+book+of+joshua+ruckman&amp;amp;qid=1627979640&amp;amp;sr=8-3&quot;&gt;The Book of Joshua - Peter Ruckman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Designing-Data-Intensive-Applications-Reliable-Maintainable/dp/1449373321/ref=sr_1_1?crid=27FZMRJ6YFQ3I&amp;amp;dchild=1&amp;amp;keywords=designing+data-intensive+applications&amp;amp;qid=1628144673&amp;amp;sprefix=designing+data%2Caps%2C394&amp;amp;sr=8-1&quot;&gt;Designing Data-Intensive Applications - Martin Kleppmann&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Hound-Baskervilles-Wisehouse-Classics/dp/9176376567/ref=sr_1_8?crid=2V1H4CHNB2FVG&amp;amp;dchild=1&amp;amp;keywords=the+hound+of+the+baskervilles&amp;amp;qid=1628144715&amp;amp;sprefix=the+hound+%2Caps%2C375&amp;amp;sr=8-8&quot;&gt;The Hound of the Baskervilles - Arthur Conan Doyle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Start-Why-Leaders-Inspire-Everyone/dp/1591846447/ref=sr_1_1?dchild=1&amp;amp;keywords=start+with+why&amp;amp;qid=1630919349&amp;amp;sr=8-1&quot;&gt;Start with Why - Simon Sinek&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://craftinginterpreters.com/&quot;&gt;Crafting Interpreters - Robert Nystrom&lt;/a&gt; 🛠&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Greenlights-Matthew-McConaughey/dp/0593139135/ref=sr_1_1?crid=NA1MIWV1K48Y&amp;amp;dchild=1&amp;amp;keywords=greenlights+matthew+mcconaughey+book&amp;amp;qid=1632213425&amp;amp;sprefix=greenlights%2Caps%2C363&amp;amp;sr=8-1&quot;&gt;Greenlights: Raucous stories and outlaw wisdom from the Academy Award-winning actor - Matthew McConaughey&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Crime-Punishment-Fyodor-Dostoyevsky/dp/0486415872&quot;&gt;Crime and Punishment - Fyodor Dostoevsky&lt;/a&gt; 🪚&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><category term="hobbies" /><summary type="html"></summary></entry><entry><title type="html">Raising Kids As A Dad</title><link href="https://www.danebalia.com/jekyll/update/christianity/truth/2021/07/24/raising-kids-my-lessons.html" rel="alternate" type="text/html" title="Raising Kids As A Dad" /><published>2021-07-24T22:16:00+02:00</published><updated>2021-07-24T22:16:00+02:00</updated><id>https://www.danebalia.com/jekyll/update/christianity/truth/2021/07/24/raising-kids-my-lessons</id><content type="html" xml:base="https://www.danebalia.com/jekyll/update/christianity/truth/2021/07/24/raising-kids-my-lessons.html">&lt;p&gt;&lt;img src=&quot;/images/raisingkids.jpg&quot; alt=&quot;Raising Kids&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Being a dad is no easy task. Men today are shunned for being masculine, condemned for who they were fundamentally designed to be and asked to tone down truth in pursuit of tolerance. In fact, the identity of men are being dissolved as our current culture relentlessly pursues addressing historic societal failures. While the pendulum is swinging the one way at full tilt, men are left in a vaccuum, some unsure, some surrendered and some going with the swing. This is at least my opinion. As such I’ve been attempting to sharpen my focus even more on what my reponsibilities are as a man, firstly towards myself, then to my beloved wife and &lt;strong&gt;especially&lt;/strong&gt; my kids.&lt;/p&gt;

&lt;p&gt;This resulted in two main ideas. The first around my &lt;strong&gt;attitude&lt;/strong&gt; towards my kids, and the second my &lt;strong&gt;responsibility&lt;/strong&gt; to them.&lt;/p&gt;

&lt;h2 id=&quot;enjoy-your-kids&quot;&gt;Enjoy your kids&lt;/h2&gt;

&lt;p&gt;The first lesson is simply - &lt;em&gt;enjoy your kids, all the time&lt;/em&gt;. This may seem rather simplistic but it implies that my kids are truly enjoyable and that I need to make a concerted effort to enjoy them. That doesn’t mean I find a slot of time in the day to enjoy their company, but rather at every interaction. Whether I’m stepping out of my home office to grab a coffee, or typing on my phone and they have something totally unimportant to say.&lt;/p&gt;

&lt;h3 id=&quot;to-infinity-and-beyond&quot;&gt;To infinity and beyond&lt;/h3&gt;

&lt;p&gt;I need to first look at them and see young eyes of wonder in a complex and challenging world. Eyes who are looking to me for security, for guidance, assurance and above all relationship. How we relate to them, is how they will relate to the world. There’s so much they still need to learn, to share, to gain confidence in and we need to appreciate that journey and  enjoy it with them. They are lost in a world that is Dad and Mum. They are lost in a world where there are more problems than answers and each day despite the complete intimidation of what they don’t know they arise with a smile and a challenge to conquer the day! They are on a journey, an adventure and we have the oppurtunity to tag along. They are indeed most enjoyable, as their living the lives we led and headed towards the lives we living.&lt;/p&gt;

&lt;h3 id=&quot;being-present&quot;&gt;Being present&lt;/h3&gt;

&lt;p&gt;The second aspect of enjoying yout kids, is being present. If they are pirates braving uncharted territory about to conquer the unknown filled with the enthusiasm that this is sure reality; who are we to upstage that with our cellphones in hand distracted by the latest FaceCrook Post or Bitter tweet. Who are we if their reality is distored by our own. I’m not saying be subservient to all their wants and needs but being present enough to stop and smell the roses. For whats on their minds however great or small; is worth acknowledging and more especially enjoying.&lt;/p&gt;

&lt;h2 id=&quot;responsibility-to-your-kids&quot;&gt;Responsibility to your kids&lt;/h2&gt;

&lt;p&gt;My responsibility to my kids are vast. Having helped bring them into this world, it my responsibility to see to it that they are able to be effective contributors to our society, God and their family. Instead of trying to cling to very precise rules I opted for 3 general areas I try to focus my attention. Those areas are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;mind&lt;/strong&gt; 🧠&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;body&lt;/strong&gt; 🧘‍♂️&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;spirit&lt;/strong&gt; 📖&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is the fundamental makeup of every individual on the planet. So everyday I as a father try to feed these areas. As an example, in the morning at breakfast we all sit around the table and eat. It is here I read a portion of the Bible. I do this to provide (spirit)ual guidance, direction, morality and wisdom. After a short bible reading we engage in scenarios around it’s events (mental) - what they would do, how they would they react and bring it back to current events (including controvercies). It stimulates some amazing conversations and challenging questions. And then after that we spend about 30-40 minutes exercising. Some days its what I think they need and other days it’s exercise they would like to do (even if it’s just playing ball).&lt;/p&gt;

&lt;p&gt;So far it appears these changes have been fruitful in improving my relationship with my kiddos but far more there is a confidence in them. A confidence that comes from knowledge of life, from understanding God and from challenging their own bodies.&lt;/p&gt;

&lt;p&gt;Kids deserve our very best and not our leftovers. Stand up dad’s, what you achieve in the workplace is nothing in comparison to what you can achieve in being a true and faithful &lt;strong&gt;father&lt;/strong&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><category term="christianity" /><category term="truth" /><summary type="html"></summary></entry></feed>